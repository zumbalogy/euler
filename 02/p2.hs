-- Each new term in the Fibonacci sequence is generated by adding the previous two terms.
-- By starting with 1 and 2, the first 10 terms will be:
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

-- Sum the even terms in the Fibonacci sequence under four million

-- TODO: needs memoization or such
-- fib 0 = 0
-- fib 1 = 1
-- fib x = fib (x - 1) + fib (x - 2)
--
-- under4m x = (fib x) < 4000000
--
-- total = sum [y | y <- [fib x | x <- (takeWhile under4m [1..])], mod y 2 == 0]

-- fib 0 = [0]
-- fib 1 = [0, 1]
-- fib x = (fib (x - 1)) ++ [((fib (x - 1)) !! (x - 1)) + ((fib (x - 1)) !! (x - 2))]


start = [0, 1]

nextFib x = [sum x, (last x) + (sum x)]

under4m x = x < 4000000

total = sum (filter even (takeWhile under4m (concat (iterate nextFib start))))

main = putStrLn (show total)
4613732
