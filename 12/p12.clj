; The sequence of triangle numbers is generated by adding the natural numbers.
; The 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.

; The first 10: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55
; Listing the factors of the first 8 triangle numbers:
;  1: 1
;  3: 1,3
;  6: 1,2,3,6
; 10: 1,2,5,10
; 15: 1,3,5,15
; 21: 1,3,7,21
; 28: 1,2,4,7,14,28
; 36: 1,2,3,4,6,9,12,18, 36

; 28 is the first triangle number to have over 5 divisors.
; What is the first triangle number to have over 500 divisors?

; NOTE: number of divisors of N is related to the prime factorization of N.
; N=24 = 2 2 2 3 = [1,2,3,4,6,8,12,24] = 8 = 2^3,3^1 = (3+1)x(1+1) = 4x2

; TODO: try out a parrallel filter function http://clojure.com/blog/2012/05/08/reducers-a-library-and-model-for-collection-processing.html

(defn lazy-triangles
  ([]
    ; the prime factor thing cannot handle 0 or 1 at the moment
    (lazy-triangles 3 3))
  ([a b]
    (lazy-seq (cons a (lazy-triangles (+ a b) (inc b))))))

(defn prime-factors [x]
  (loop [n x i 2 results []]
    ; note: would maybe want to unroll this and occasionally check to see if (* i i) is more than n. large primes are unfriendly at the moment
    (if (zero? (rem n i))
      (if (= n i)
        (conj results n)
        (recur (quot n i) i (conj results i)))
      (recur n (inc i) results))))

(defn count-factors [x]
  (reduce
    (fn [a [_ b]] (* a (inc b)))
    1
    (frequencies (prime-factors x))))

; (println (first (filter #(< 500 (count-factors %)) (lazy-triangles))))
; 76576500
; the 12375 triangle number

; (time (first (filter #(< 500 (count-factors %)) (lazy-triangles))))
; (println (first (filter #(< 500 (count-factors %)) (lazy-triangles))))
; (time (first (filter #(< 500 (count-factors %)) (lazy-triangles))))
; (time (first (filter #(< 500 (count-factors %)) (lazy-triangles))))
; (time (first (filter #(< 500 (count-factors %)) (lazy-triangles))))
; (time (first (filter #(< 500 (count-factors %)) (lazy-triangles))))

; "Elapsed time: 1426.561263 msecs"
; 76576500
; "Elapsed time: 1405.266988 msecs"
; "Elapsed time: 1330.732704 msecs"
; "Elapsed time: 1330.830501 msecs"
; "Elapsed time: 1284.902334 msecs"

; (time (first (filter #(< 500 %) (map count-factors (lazy-triangles)))))
; (println (first (filter #(< 500 %) (map count-factors (lazy-triangles)))))
; (time (first (filter #(< 500 %) (map count-factors (lazy-triangles)))))
; (time (first (filter #(< 500 %) (map count-factors (lazy-triangles)))))
; (time (first (filter #(< 500 %) (map count-factors (lazy-triangles)))))
; (time (first (filter #(< 500 %) (map count-factors (lazy-triangles)))))
;
; ; "Elapsed time: 1790.564285 msecs"
; ; 576 ; uhh, its heart is in the right place
; ; "Elapsed time: 1442.459191 msecs"
; ; "Elapsed time: 1295.216521 msecs"
; ; "Elapsed time: 1314.22736 msecs"
; ; "Elapsed time: 1295.625382 msecs"


; (time (first (filter #(< 500 %) (pmap count-factors (lazy-triangles)))))
; (println (first (filter #(< 500 %) (pmap count-factors (lazy-triangles)))))
; (time (first (filter #(< 500 %) (pmap count-factors (lazy-triangles)))))
; (time (first (filter #(< 500 %) (pmap count-factors (lazy-triangles)))))
; (time (first (filter #(< 500 %) (pmap count-factors (lazy-triangles)))))
; (time (first (filter #(< 500 %) (pmap count-factors (lazy-triangles)))))

; "Elapsed time: 1109.231979 msecs"
; 576
; "Elapsed time: 1016.593385 msecs"
; "Elapsed time: 983.876271 msecs"
; "Elapsed time: 957.865752 msecs"
; "Elapsed time: 980.755178 msecs"

(time (second (first (filter #(< 500 (first %)) (pmap (juxt count-factors identity) (lazy-triangles))))))
(println (second (first (filter #(< 500 (first %)) (pmap (juxt count-factors identity) (lazy-triangles))))))
(time (second (first (filter #(< 500 (first %)) (pmap (juxt count-factors identity) (lazy-triangles))))))
(time (second (first (filter #(< 500 (first %)) (pmap (juxt count-factors identity) (lazy-triangles))))))
(time (second (first (filter #(< 500 (first %)) (pmap (juxt count-factors identity) (lazy-triangles))))))
(time (second (first (filter #(< 500 (first %)) (pmap (juxt count-factors identity) (lazy-triangles

;   e 12 clj
; "Elapsed time: 1107.111812 msecs"
; 76576500
; "Elapsed time: 1028.126577 msecs"
; "Elapsed time: 977.946355 msecs"
; "Elapsed time: 994.324366 msecs"
; "Elapsed time: 969.789985 msecs"
