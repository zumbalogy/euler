potential strategies:

unrolling the guessing recursion.
each cell could have a "guess number" field to know how to roll back


keeping a list of indexes of [un]solved ones, that way
the list does not need to be scanned (currently it scans the list like
3 times per guess or so, and then a time per repeat calc), so many times
but this would need to be rolled back with retreating from guess too.
but thats almost definitly worth it timing wise
-- even just for the "is it totally solved" check this could be savings as that is called over 1000 times in euler problem


look into (for crystal, dont know if ruby has it)
#unsafe_fetch(index : Int)


for crystal,
declare size of out arrays in *_rest functions,
and assign instead of push into.
(this could even be hoisted out of their
functions and made global, though maybe just the
c one should have that level of optimization)



-------

easter monster

ruby
real    0m0.489s
user    0m0.477s
sys     0m0.013s

crystal
real    0m0.057s
user    0m0.061s
sys     0m0.010s


c
real    0m0.012s
user    0m0.012s
sys     0m0.000s
