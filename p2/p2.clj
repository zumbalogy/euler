;;  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

;;  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

;;  total the even fibs under 4m


(def fibs
    (lazy-cat [0 1]
              (map + fibs (rest fibs))))


(take 4 fibs)


(take 10 (for [x (range 100) y (range 100) :while (< y x)]  [x y]))


(take 10 (for [x fibs] [x]))

(take 10 (for [x fibs :while (<= x 2)] [x]))

(for [x fibs :while (<= x 2)] [x])

(for [x fibs :while (even? x) ] [x])
;; why is this not grabbing more of them????

(even? 2)

(<= 1 2)





