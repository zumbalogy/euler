# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.



start = [0, 1]
total = 0
until start.last >= 4_000_000
    start << start[-1] + start[-2]
    if start.last % 2 == 0
        total += start.last
    end
    start.shift
end


p total

# 4613732
# 1.8282e-05 seconds


##############################################

time2 = Time.now

a = 1
b = 2

total = 0

while b < 4_000_000
    total += b
    # putting the below in a 3.times loop slows it down
    save = b
    b += a
    a = save

    save = b
    b += a
    a = save

    save = b
    b += a
    a = save
end

p Time.now - time2
p total

# 4613732

#old time with chekcing if even
# 5.219e-06

# new time (with loop)
# 1.1328e-05

# new time without loop (not DRY)
# 4.246e-06


# js objects are just hashes




# users{}

# dandelions{}

# real lions{}


# vs 


# {db

#     users{}

#     etc{}

#     etc{}

# }



